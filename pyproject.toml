[project]
name = "app"
version = "0.1.0"
description = "Template for a service"
requires-python = ">=3.10"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.115.5",
    "pydantic<3.0.0,>=2.10.2",
    "sqlmodel<1.0.0,>=0.0.22",
    "pydantic-settings<3.0.0,>=2.6.1",
    "tenacity<10.0.0,>=9.0.0",
    "psycopg[binary]<4.0.0,>=3.2.3",
    "jinja2<4.0.0,>=3.1.4",
    "asyncpg<1.0.0,>=0.30.0",
    "requests<3.0.0,>=2.32.3"
]

[tool.uv]
dev-dependencies = [
    "pytest<9.0.0,>=8.3.3",
    "mypy<2.0.0,>=1.13.0",
    "ruff<1.0.0,>=0.8.0",
    "pre-commit<5.0.0,>=4.0.1",
    "types-passlib<2.0.0.0,>=1.7.7.20240819",
    "coverage<8.0.0,>=7.6.8",
    "pytest-asyncio<1.0.0,>=0.24.0",
    "httpx<1.0.0,>=0.25.1",
    "asyncio<4.0.0,>=3.4.3"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode="auto"
asyncio_default_fixture_loop_scope="session"
